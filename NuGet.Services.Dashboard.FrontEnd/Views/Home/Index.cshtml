@{
    @ViewBag.var
}

<script type="text/javascript">

    var tag = @Html.Raw(Json.Encode(@ViewBag.var))
    function ShowDetails(action, controller) {

        $.ajax({
            url: ' /' + controller + '/' + action,
            type: "GET",
            dataType: 'html',
            success: function (result) {

                $("#backbutton").attr('class', 'back-button big page-back');
                $("#title").html(controller + "<small>" + action + "</small>");
                $("#maincontent").html(result);
            }
        });

    };

    function RefreshElmah() {
        $.ajax({
            url: '@Url.Action("RefreshElmah", "TroubleShooting")',
            type: "GET",
            dataType: 'html',
            success: function (result) {
                $("#1hourdivelmah").html(result);
            }
        });

    };

    function UpdateTime() {
        $.ajax({
            url: '@Url.Action("GetCurrentPacificTime", "Home")',
            type: "GET",
            dataType: 'json',
            success: function (result) {
                $("#timeButton").html(result);
            }
        });
        window.setTimeout(UpdateTime, 1000 * 60);
    };


    function ConfigSetting() {      
        if (tag == "Prod0") document.getElementById("configSetting").selectedIndex = 0;
        if (tag == "Int0") document.getElementById("configSetting").selectedIndex = 1;
    };

    function RefreshDBEvent() {
        $.ajax({
            url: '@Url.Action("RefreshDatabaseEvent", "TroubleShooting")',
            type: "GET",
            dataType: 'html',
            success: function (result) {
                $("#1hourdivdb").html(result);
            }
        });
    }

    function RefreshDBRequest() {
        $.ajax({
            url: '@Url.Action("RefreshDatabaseRequest", "TroubleShooting")',
            type: "GET",
            dataType: 'html',
            success: function (result) {
                $("#DBrequest").html(result);
            }
        });
    }

    function RefreshDB() {
        RefreshDBEvent();
        RefreshDBRequest();
    }


    

    $(function () {
        setInterval(function () { $('#DRRequestsDiv').load('/ResourceMonitoring/DBRequests'); }, 15 * 60 * 1000);
        setInterval(function () { $('#DBConnectionsDiv').load('/ResourceMonitoring/DBConnections'); }, 15 * 60 * 1000);
        setInterval(function () { $('#WorkJobStatusDiv').load('/WorkJob/Index'); }, 10 * 60 * 1000);
        setInterval(function () { $('#RequestsPerHourDiv').load('/SLA/Throughput'); }, 15 * 60 * 1000);
        setInterval(function () { $('#ErrorsPerHourDiv').load('/SLA/ErrorRate'); }, 15 * 60 * 1000);
        setInterval(function () { $('#PackageRestoreResponseTimeDiv').load('/UpTime/GetPackageRestoreUpTime'); }, 15 * 60 * 1000);
    });

    function GetPingdomStatusUpdate() {
        $.ajax({
            url: '@Url.Action("GetStatus", "UpTime")',
            type: "GET",
            dataType: 'json',
            success: function (result) {
                for (var a = 0; a <= 6 ; a++) {
                    var element = document.getElementById(result[a].Id);
                    if (element != null) {
                        element.innerHTML = "<h2>" + result[a].Name + " </h2> <br/><h1> " + result[a].Status + "</h1> ";
                        if (result[a].Status != 'up') {
                            $(element).removeClass('tile-content bg-color-green');
                            $(element).addClass('tile double bg-color-red');
                        }
                        else
                            $(element).addClass('tile double bg-color-green');
                    }
                }
                window.setTimeout(GetPingdomStatusUpdate, 1000 * 60 * 3);
            }
        });
    };

    $(document).ready(function () {
        GetPingdomStatusUpdate();
        UpdateStatus();
        UpdateTime();
        ConfigSetting();
        UpdateTMStatus()
        UpdateCloudServiceStatus();
        //UpdateSearchStatus();

    });

</script>

<div class="page secondary with-sidebar">
    <div class="page-header">
        <div class="page-header-content" id="headercontent">
            <h1 id="title"></h1>
            <a href="/" id="backbutton"></a>
        </div>
    </div>
    <div class="page-region">
        <div style="position:absolute; top: 1em; right: 1em;">
            <button id="timeButton" class="default"></button>
            <select id="configSetting" onchange="location = configSetting.options[configSetting.selectedIndex].value">
                <option value="@Url.Action("UpdateEnvironment", "Home",new {envName = "Prod0"})" id="prod0option">prod0</option>
                <option value="@Url.Action("UpdateEnvironment", "Home",new {envName = "Int0"})" id="int0option" >int0</option>
            </select>
        </div>
    </div>
    <div class="grid grid-pad">
        <div class="col-1-3">
            <div class="content">
                @Html.Action("Index", "UpTime")
                @Html.Action("Index", "TrafficManager")
            </div>
        </div>

        <div class="col-1-3">
            <div class="content">
                @Html.Action("Index", "SLA")
                @Html.Action("Index", "ResourceMonitoring")
                @Html.Action("CloudService_Index", "ResourceMonitoring")
            </div>
        </div>

        <div class="col-1-3">
            <div class="content">

                <div class="tile bg-color-red" title="New user registrations per hour">
                    <div class="tile-content" onclick="ShowDetails('Details','Trending');">
                        <h2>New Users</h2>
                        <br />
                        <div id="CurrentUsers"></div>
                    </div>

                    @*<div class="brand">
                            <div id="CurrentUsers" class="badge"></div>
                        </div>*@
                </div>
                <div class="tile bg-color-red" data-role="tile-slider" data-param-period="10000" onclick="ShowDetails('Details','Trending');" title="New packages uploaded per hour">
                    <div class="tile-content">
                        <h2>New Packages</h2>
                        <br />
                        <div id="CurrentPackages"></div>
                        @*<div class="brand">
                                <div id="CurrentPackages" class="badge"></div>
                            </div>*@
                    </div>
                </div>
                @*@Html.Action("Index", "SearchService")*@

            </div>
        </div>

    </div>

    <div class="nav-bar bg-color-darken">
        <div class="nav-bar-inner">

            <span class="element">AppServer Tier<small> Hourly trending</small></span>
        </div>
    </div>
    <div class="grid grid-pad">
        <div class="col-1-3">
            <div class="content">
                <div id="RequestsPerHourDiv" title="Requests per minute">
                    @Html.Action("Throughput", "SLA");
                    <p style="font-family: arial; color: gray; font-size: 15px; font-style: italic"><small>*Threshold set to 100 K and above</small></p>

                </div>
            </div>
        </div>
        <div class="col-1-3">
            <div class="content">
                <div id="ErrorsPerHourDiv" title="Server Errors per hour">
                    @Html.Action("ErrorRate", "SLA");
                    <p style="font-family: arial; color: gray; font-size: 15px; font-style: italic"><small>*Threshold set based on invidual errors</small></p>
                </div>
            </div>
        </div>
        <div class="col-1-3">
            <div class="content">
                <div id="PackageRestoreResponseTimeDiv" title="Package Restore response time">
                    @Html.Action("ResponseTimeOverview", "UpTime");
                    <p style="font-family: arial; color: gray; font-size: 15px; font-style: italic"><small>*Response time for pingdom checks in milli secs.</small></p>
                </div>
            </div>
        </div>

    </div>


    <div class="nav-bar bg-color-darken">
        <div class="nav-bar-inner">
            <span class="element">Database Tier and Work Service <small>Hourly trending</small></span>
        </div>
    </div>
    <div class="grid grid-pad">
        <div class="col-1-3">
            <div class="content">
                <div id="DRRequestsDiv" title="SQL Azure DB Requests">
                    @Html.Action("DBRequests", "ResourceMonitoring");
                    <p style="font-family: arial; color: gray; font-size: 15px; font-style: italic"><small>*Threshold set to 50 or above</small></p>
                </div>
            </div>
        </div>
        <div class="col-1-3">
            <div class="content">
                <div id="DBConnectionsDiv" title="SQL Azure DB connections">
                    @Html.Action("DBConnections", "ResourceMonitoring");
                    <p style="font-family: arial; color: gray; font-size: 15px; font-style: italic"><small>*Threshold set to 100 and above</small></p>
                </div>
            </div>
        </div>
    </div>
</div>


